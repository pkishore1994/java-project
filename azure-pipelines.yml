trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'acrServiceConnection'
  imageRepository: 'productcatalogue'
  containerRegistry: 'javaprojectacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/java/kubernetes/productcatalogue/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and Push Stage
  jobs:
    - job: Build
      displayName: Build Job
      pool:
        name: 'Azure Pipelines'
        demands:
          - agent.name -equals 'Hosted Agent'

      steps:
        - task: Maven@4
          displayName: Build with Maven
          inputs:
            mavenPomFile: '- task: Maven@4
  inputs:
    mavenPomFile: 'java/stockmanager/pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false
            findBugsRunAnalysis: true

        - task: Docker@2
          displayName: Build and push Docker image
          inputs:
            command: buildAndPush
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            containerRegistry: $(dockerRegistryServiceConnection)
            tags: |
              $(tag)
